{"name":"code_hdu","tagline":"知行合一","body":"# Problem 1100\r\n\r\n[二叉树排序](http://blog.sohu.com/people/!Zm9nZ3lfZWxmQHNvaHUuY29t/79594466.html)\r\n\r\n# Problem 1102\r\nkruskal算法求最小生成树\r\n查询与合并使用并查集\r\n\r\n```c++\r\nint find(int x) {\r\n    return p[x] == x ? x : p[x] = find(p[x]);\r\n}\r\n```\r\n```c++\r\nvoid union(int a, int b) {\r\n    int x = find(a);\r\n    int y = find(y);\r\n    if (x != y) {\r\n        p[x] = y;\r\n     }\r\n}\r\n```\r\n\r\n# Problem 1103\r\n使用队列数组模拟排队\r\n\r\n ```c++\r\ndeque<int> q[3];\r\nq[i].push_back; // 入队\r\nq[i].pop_front; // 出队\r\n```\r\n\r\n\r\n# Problem 1104\r\n\r\n题意：（注意题目中的%是指mod）开始给了你n, k, m。。。。每次由+m, -m, *m, modm得到新的N，继续对N这样的操作,直到(n+1) mod k== N mod k时结束。。。并且打印路径\r\n\r\n%与mod的区别：%出来的数有正有负，符号取决于左操作数。。。而mod只能是正（因为a = b * q + r (q > 0 and 0 <= r < q), then we have a mod q = r 中r要大于等于0小于q）。。。。。\r\n\r\n所以要用%来计算mod的话就要用这样的公式：a mod b = (a % b + b) % b\r\n\r\n括号里的目的是把左操作数转成正数\r\n\r\n由于新的N可以很大，所以我们每一步都要取%，而且最后要mod k，正常来说每步都%k就行了，但是由于其中的一个操作是N%m,所以我们每一步就不能%k了（%k%m混用会导致%出来的答案错误），而要%(k *m);\r\n\r\n思路： 用BFS（广度优先搜索），找到的第一个解一定是离根最近的，缺点是空间开销大。每一步的状态是`n mod k ((n % k + k) %k)`\r\n\r\n\r\n\r\n# Problem 1107\r\n\r\n用一个结构体数组保存所有人，如果HP < 0 ，将代号变成0，而不是从数组中删除。题目的意思是一个格子只有两个人而且分属不同门派才战斗,其他情况跳过。\r\n> 当有两名不同门派的弟子进入同一个格子时，一定会发生一次战斗，而且也只有在这种情况下，才会发生战斗。（同派弟子之间当然不会自相残杀；一个格子里三派弟子都有时，大家都会因为害怕别人渔翁得利而不敢出手；而多名同门派弟子也不会联手对付敌人，因为这有悖于武林中崇尚的单打独斗精神，会被人耻笑）\r\n\r\n\r\n# Problem 1109\r\n\r\n使用模拟退火搜索最优解\r\n\r\n1. 初始化：初始温度T(充分大)，初始解状态S(是算法迭代的起点)，每个T值的迭代次数L\r\n2. 对k=1，……，L做第(3)至第(6)步：\r\n3. 产生新解S′\r\n4. 计算增量Δt′=C(S′)-C(S)，其中C(S)为评价函数\r\n5. 若Δt′<0则接受S′作为新的当前解，否则以概率exp(-Δt′/T)接受S′作为新的当前解.\r\n6. 如果满足终止条件则输出当前解作为最优解，结束程序。终止条件通常取为连续若干个新解都没有被接受时终止算法。\r\n8. T逐渐减少，且T->0，然后转第2步。\r\n\r\n#Problem 1556\r\n\r\n[树状数组](http://dongxicheng.org/structure/binary_indexed_tree/)\r\n\r\n#Problem 1207\r\n\r\n```cpp\r\n//四柱汉诺塔 Frame算法：\r\nf[n] = min(2 * f[n - r] + pow(2, r) - 1); // r = 1..n-1\r\n```\r\n[多柱汉诺塔](http://www.cnblogs.com/fanzhidongyzby/archive/2012/07/28/2613173.html)\r\n\r\n#Promble 1208\r\n\r\n```cpp\r\n//从矩阵左上角到右下角有多少种走法\r\n//可以直接更新或者dfs\r\n//long long dp[i][j]\r\ndp[i][j + a[i][j]] += dp[i][j];\r\ndp[i + a[i][j]][j] += dp[i][j];\r\n```\r\n[题目描述有问题](http://acm.hdu.edu.cn/discuss/problem/post/reply.php?postid=12037&messageid=1&deep=0)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}